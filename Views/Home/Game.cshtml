@{
        ViewBag.Title = "Game";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/5.1.3/css/bootstrap.min.css" rel="stylesheet">
</head>
<body onload="stopWatch()">
    <main class="container-fluid">
        <script>
            function addPlayerRedirect() {
                var url = '@Url.Action("Index", "AddPlayer")';
                window.location.href = url;
            }
            function joinPlayerRedirect() {
                var url = '@Url.Action("Index", "JoinPlayer")';
                window.location.href = url;
            }
            function cashOutPlayerRedirect() {
                var url = '@Url.Action("Index", "CashOutPlayer")';
                window.location.href = url;
            }
            function endGameRedirect() {
                var url = '@Url.Action("Index", "EndGame")';
                window.location.href = url;
            }
            let hour = @((DateTime.Now - PokerStatBoard.Logic.GeneralLogic.getCurrentGame().StartDateTime).Hours);
            let minute = @((DateTime.Now - PokerStatBoard.Logic.GeneralLogic.getCurrentGame().StartDateTime).Minutes);
            let second = @((DateTime.Now - PokerStatBoard.Logic.GeneralLogic.getCurrentGame().StartDateTime).Seconds);
            function stopWatch() {
                second++;
                if (second == 60) {
                    minute += 1;
                    second = 0;
                    setTimeout(location.reload(), 2000);
                }
                let hrString = hour;
                let minString = minute;
                let secString = second;
                if (hour < 10) {
                    hrString = "0" + hrString;
                }
                if (minute < 10) {
                    minString = "0" + minString;
                }
                if (second < 10) {
                    secString = "0" + secString;
                }
                document.getElementById('hr').innerHTML = hrString;
                document.getElementById('min').innerHTML = minString;
                document.getElementById('sec').innerHTML = secString;
                setTimeout(stopWatch, 1000);
            }
        </script>

        <div class="row">
            <div class="col-lg-4 mb-4">
                <div class="card" style="height: 80vh;">
                    <div class="card" style="height: 50%;">
                        <div class="card-header">
                            Buy-Ins
                        </div>
                        <div class="card-body p-0" style="max-height: 250px; overflow-y: auto;">
                            <table class="table table-striped table-sm">
                                <tbody>
                                    @foreach (PokerStatBoard.Models.BuyInModel buyIn in PokerStatBoard.Logic.GeneralLogic.getCurrentBuyIns())
                                    {
                                        <tr>
                                            <td class="text-start">@((buyIn.DateTime - PokerStatBoard.Logic.GeneralLogic.getCurrentGame().StartDateTime).ToString().Split('.')[0])</td>
                                            <td class="text-start">@PokerStatBoard.Logic.GeneralLogic.getPlayer(buyIn.PlayerID).Name</td>
                                            <td class="text-end">$@buyIn.Amount</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div class="card" style="height: 50%;">
                        <div class="card-header">
                            Cash-Outs
                        </div>
                        <div class="card-body p-0" style="max-height: 200px; overflow-y: auto;">
                            <table class="table table-striped table-sm">
                                <tbody>
                                    @foreach (PokerStatBoard.Models.CashOutModel cashOut in PokerStatBoard.Logic.GeneralLogic.getCurrentCashOuts())
                                    {
                                        <tr>
                                            <td class="text-start">@((cashOut.DateTime - PokerStatBoard.Logic.GeneralLogic.getCurrentGame().StartDateTime).ToString().Split('.')[0])</td>
                                            <td class="text-start">@PokerStatBoard.Logic.GeneralLogic.getPlayer(cashOut.PlayerID).Name</td>
                                            <td class="text-end">$@cashOut.Amount</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-4 mb-4 text-center">
                <div class="card" style="height: 80vh;">
                    <div class="card m-4">
                        <div class="card-header fs-3">
                            AP3 Poker Live
                        </div>
                    </div>
                    <div>
                        <div class="fs-5">Game Clock</div>
                        <div class="fs-2" id="time">
                            <span id="hr">00</span>:<span id="min">00</span>:<span id="sec">00</span>
                        </div>
                    </div>
                    <div class="mt-4">
                        <div class="fs-5">On Table</div>
                        <div class="fs-2">$@(Math.Round(PokerStatBoard.Logic.GeneralLogic.getAmountOnTable(), 2))</div>
                    </div>
                    <div class="mt-4">
                        <div class="fs-5">Avg. Stack</div>
                        <div class="fs-2">$@(Math.Round(PokerStatBoard.Logic.GeneralLogic.getAmountOnTable() / (PokerStatBoard.Logic.GeneralLogic.getCurrentPlayers().Count == 0 ? 1 : PokerStatBoard.Logic.GeneralLogic.getCurrentPlayers().Count), 2))</div>
                    </div>
                    <div class="mt-auto">
                        <div class="d-grid gap-2 mt-4">
                            <button class="btn btn-outline-primary me-4 ms-4" onclick="joinPlayerRedirect()">Buy In Player</button>
                            <button class="btn btn-outline-primary me-4 ms-4" onclick="cashOutPlayerRedirect()">Cash Out Player</button>
                        </div>
                        <div class="d-grid gap-2 mt-4">
                            <button class="btn btn-outline-primary me-4 ms-4" data-bs-toggle="modal" data-bs-target="#confirmation">Add New Player</button>
                            <button class="btn btn-outline-primary me-4 ms-4 mb-4" data-bs-toggle="modal" data-bs-target="#confirmation-2">End Game</button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-4 mb-4">
                <div class="card" style="height: 80vh;">
                    <div class="card-header">
                        At Table
                    </div>
                    <div class="card-body p-0">
                        <table class="table table-striped table-sm">
                            <tbody>
                                @foreach (PokerStatBoard.Models.PlayerModel player in PokerStatBoard.Logic.GeneralLogic.getCurrentPlayers())
                                {
                                    <tr>
                                        <td class="text-start">@player.Name</td>
                                        <td class="text-end">$@PokerStatBoard.Logic.GeneralLogic.getCurrentIn(player)</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <div class="modal fade" id="confirmation">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Are you sure?</h5>
                        <button type="button" class="btn-close" data-bs-target="#confirmation" data-bs-toggle="modal" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <p>If you end the game, your action cannot be undone.</p>
                        <p>Note: The game cannot end until all players have cashed out.</p>
                    </div>
                    <div class="modal-footer">
                        <button id="modal_button" class="btn btn-primary" onclick="endGameRedirect()">Yes</button>
                        <button id="modal_button" class="btn btn-secondary" data-bs-target="#confirmation" data-bs-toggle="modal" data-bs-dismiss="modal">No</button>
                    </div>
                </div>
            </div>
        </div>

        <div class="modal fade" id="confirmation-2">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Are you sure?</h5>
                        <button type="button" class="btn-close" data-bs-target="#confirmation-2" data-bs-toggle="modal" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <p>Players must be bought in every game, but only added once.</p>
                        <p>Please ensure your player has not already been added.</p>
                        <p>If they appear on the leaderboard, they have been added.</p>
                    </div>
                    <div class="modal-footer">
                        <button id="modal_button" class="btn btn-primary" onclick="addPlayerRedirect()">Yes</button>
                        <button id="modal_button" class="btn btn-secondary" data-bs-target="#confirmation-2" data-bs-toggle="modal" data-bs-dismiss="modal">No</button>
                    </div>
                </div>
            </div>
        </div>
    </main>
</body>
